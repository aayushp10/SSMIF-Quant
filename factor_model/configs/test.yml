test project:
  rebalance_period: 120
  window:
    start_date: 2015-01-01
    end_date: 2021-04-30
  sectors:
    tech:
      data:
        lag: 30 # lag by this many days
        bloomberg:
          S5INFT Index:
            output_basename: NULL # filepath basename (with extension)
            cols:
              - PX_LAST
              - PE_RATIO
              - PX_TO_BOOK_RATIO
              - PX_TO_SALES_RATIO
              - FREE_CASH_FLOW_YIELD
              - EST_LTG_EPS_AGGTE
              - TOT_DEBT_TO_TOT_ASSET
              - EARN_YLD
              - PX_VOLUME
              - CUR_MKT_CAP

          EHGDUS Index:
            cols:
              - PX_LAST

          USGG2YR Index:
            cols:
              - PX_LAST
      
        operations: []

      models:
        - name: LinearRegression
          type: linear_regression
          predictors:
              - source: bloomberg
                ticker: S5INFT Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5INFT Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5INFT Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5INFT Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5INFT Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5INFT Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5INFT Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5INFT Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            fit_intercept: True
            normalize: True
            n_jobs: -1
            pc: 5
        - name: RandomForest
          type: random_forest
          predictors:
              - source: bloomberg
                ticker: S5INFT Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5INFT Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5INFT Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5INFT Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5INFT Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5INFT Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5INFT Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5INFT Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            n_estimators: 500
            criterion: mse
            max_depth: 5
            min_samples_split: 5
            random_state: 42
            bootstrap: True
        - name: ArimaRegression
          type: arima_regression
          hyperparams:
            order: [5, 1, 0]
          fitparams:
            cov_type: robust

      predict:
        data:
          same_as_train: True
          bloomberg: {} # optional
          additional: {}
        target:
          source: bloomberg
          ticker: S5INFT Index
          col_name: PX_LAST
        window_size: 30 # number of rows to predict off of at a time
        output_window:
          start_date: 2021-05-01 # this should be after the date your data ends on if you want to really project
          end_date: 2021-05-30

    fin:
      data:
        lag: 30
        bloomberg:
          S5FINL Index:
            output_basename: NULL
            cols:
              - PX_LAST
              - PE_RATIO
              - PX_TO_BOOK_RATIO
              - PX_TO_SALES_RATIO
              - FREE_CASH_FLOW_YIELD
              - EST_LTG_EPS_AGGTE
              - TOT_DEBT_TO_TOT_ASSET
              - EARN_YLD
              - PX_VOLUME
              - CUR_MKT_CAP

          EHGDUS Index:
            cols:
              - PX_LAST

          USGG2YR Index:
            cols:
              - PX_LAST

        operations: []

      models:
        - name: LinearRegression
          type: linear_regression
          predictors:
              - source: bloomberg
                ticker: S5FINL Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5FINL Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5FINL Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5FINL Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5FINL Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5FINL Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5FINL Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5FINL Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            fit_intercept: True
            normalize: True
            n_jobs: -1
            pc: 5
        - name: RandomForest
          type: random_forest
          predictors:
              - source: bloomberg
                ticker: S5FINL Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5FINL Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5FINL Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5FINL Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5FINL Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5FINL Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5FINL Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5FINL Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            n_estimators: 500
            criterion: mse
            max_depth: 5
            min_samples_split: 5
            random_state: 42
            bootstrap: True
        - name: ArimaRegression
          type: arima_regression
          hyperparams:
            order: [5, 1, 0]
          fitparams:
            cov_type: robust

      predict:
        data:
          same_as_train: True
          bloomberg: {} # optional
          additional: {}
        target:
          source: bloomberg
          ticker: S5FINL Index
          col_name: PX_LAST
        window_size: 30 # number of rows to predict off of at a time
        output_window:
          start_date: 2021-05-01 # this should be after the date your data ends on if you want to really project
          end_date: 2021-05-30

    eng:
      data:
        lag: 30
        bloomberg:
          S5ENRS Index:
            output_basename: NULL
            cols:
              - PX_LAST
              - PE_RATIO
              - PX_TO_BOOK_RATIO
              - PX_TO_SALES_RATIO
              - FREE_CASH_FLOW_YIELD
              - EST_LTG_EPS_AGGTE
              - TOT_DEBT_TO_TOT_ASSET
              - EARN_YLD
              - PX_VOLUME
              - CUR_MKT_CAP
              
            col_map: []

          EHGDUS Index:
            cols:
              - PX_LAST
            col_map: []

          USGG2YR Index:
            cols:
              - PX_LAST
            col_map: []

        operations: []

      models:
        - name: LinearRegression
          type: linear_regression
          predictors:
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            fit_intercept: True
            normalize: True
            n_jobs: -1
            pc: 5
        - name: RandomForest
          type: random_forest
          predictors:
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5ENRS Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            n_estimators: 500
            criterion: mse
            max_depth: 5
            min_samples_split: 5
            random_state: 42
            bootstrap: True
        - name: ArimaRegression
          type: arima_regression
          hyperparams:
            order: [5, 1, 0]
          fitparams:
            cov_type: robust

      predict:
        data:
          same_as_train: True
          bloomberg: {} # optional
          additional: {}
        target:
          source: bloomberg
          ticker: S5ENRS Index
          col_name: PX_LAST
        window_size: 30 # number of rows to predict off of at a time
        output_window:
          start_date: 2021-05-01 # this should be after the date your data ends on if you want to really project
          end_date: 2021-05-30

    hlth:
      data:
        lag: 30
        bloomberg:
          S5HLTH Index:
            output_basename: NULL
            cols:
              - PX_LAST
              - PE_RATIO
              - PX_TO_BOOK_RATIO
              - PX_TO_SALES_RATIO
              - FREE_CASH_FLOW_YIELD
              - EST_LTG_EPS_AGGTE
              - TOT_DEBT_TO_TOT_ASSET
              - EARN_YLD
              - PX_VOLUME
              - CUR_MKT_CAP
              
            col_map: []

          EHGDUS Index:
            cols:
              - PX_LAST
            col_map: []

          USGG2YR Index:
            cols:
              - PX_LAST
            col_map: []

        operations: []

      models:
        - name: LinearRegression
          type: linear_regression
          predictors:
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            fit_intercept: True
            normalize: True
            n_jobs: -1
            pc: 5
        - name: RandomForest
          type: random_forest
          predictors:
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5HLTH Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            n_estimators: 500
            criterion: mse
            max_depth: 5
            min_samples_split: 5
            random_state: 42
            bootstrap: True
        - name: ArimaRegression
          type: arima_regression
          hyperparams:
            order: [5, 1, 0]
          fitparams:
            cov_type: robust

      predict:
        data:
          same_as_train: True
          bloomberg: {} # optional
          additional: {}
        target:
          source: bloomberg
          ticker: S5HLTH Index
          col_name: PX_LAST
        window_size: 30 # number of rows to predict off of at a time
        output_window:
          start_date: 2021-05-01 # this should be after the date your data ends on if you want to really project
          end_date: 2021-05-30

    cons:
      data:
        lag: 30
        bloomberg:
          S5CONS Index:
            output_basename: NULL
            cols:
              - PX_LAST
              - PE_RATIO
              - PX_TO_BOOK_RATIO
              - PX_TO_SALES_RATIO
              - FREE_CASH_FLOW_YIELD
              - EST_LTG_EPS_AGGTE
              - TOT_DEBT_TO_TOT_ASSET
              - EARN_YLD
              - PX_VOLUME
              - CUR_MKT_CAP

          EHGDUS Index:
            cols:
              - PX_LAST
          
          USGG2YR Index:
            cols:
              - PX_LAST
            col_map: []

        operations: []

      models:
        - name: LinearRegression
          type: linear_regression
          predictors:
              - source: bloomberg
                ticker: S5CONS Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5CONS Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5CONS Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5CONS Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5CONS Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5CONS Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5CONS Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5CONS Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last

          hyperparams:
            fit_intercept: True
            normalize: True
            n_jobs: -1
            pc: 5
        - name: RandomForest
          type: random_forest
          predictors:
              - source: bloomberg
                ticker: S5CONS Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5CONS Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5CONS Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5CONS Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5CONS Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5CONS Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5CONS Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5CONS Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last

          hyperparams:
            n_estimators: 500
            criterion: mse
            max_depth: 5
            min_samples_split: 5
            random_state: 42
            bootstrap: True
        - name: ArimaRegression
          type: arima_regression
          hyperparams:
            order: [5, 1, 0]
          fitparams:
            cov_type: robust

      predict:
        data:
          same_as_train: True
          bloomberg: {} # optional
          additional: {}
        target:
          source: bloomberg
          ticker: S5CONS Index
          col_name: PX_LAST
        window_size: 30 # number of rows to predict off of at a time
        output_window:
          start_date: 2021-05-01 # this should be after the date your data ends on if you want to really project
          end_date: 2021-05-30

    cond:
      data:
        lag: 30
        bloomberg:
          S5COND Index:
            output_basename: NULL
            cols:
              - PX_LAST
              - PE_RATIO
              - PX_TO_BOOK_RATIO
              - PX_TO_SALES_RATIO
              - FREE_CASH_FLOW_YIELD
              - EST_LTG_EPS_AGGTE
              - TOT_DEBT_TO_TOT_ASSET
              - EARN_YLD
              - PX_VOLUME
              - CUR_MKT_CAP
              
          EHGDUS Index:
            cols:
              - PX_LAST
          
          USGG2YR Index:
            cols:
              - PX_LAST
            col_map: []

        operations: []

      models:
        - name: LinearRegression
          type: linear_regression
          predictors:
              - source: bloomberg
                ticker: S5COND Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5COND Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5COND Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5COND Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5COND Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5COND Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5COND Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5COND Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last

          hyperparams:
            fit_intercept: True
            normalize: True
            n_jobs: -1
            pc: 5
        - name: RandomForest
          type: random_forest
          predictors:
              - source: bloomberg
                ticker: S5COND Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5COND Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5COND Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5COND Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5COND Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5COND Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5COND Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5COND Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last

          hyperparams:
            n_estimators: 500
            criterion: mse
            max_depth: 5
            min_samples_split: 5
            random_state: 42
            bootstrap: True
        - name: ArimaRegression
          type: arima_regression
          hyperparams:
            order: [5, 1, 0]
          fitparams:
            cov_type: robust

      predict:
        data:
          same_as_train: True
          bloomberg: {} # optional
          additional: {}
        target:
          source: bloomberg
          ticker: S5COND Index
          col_name: PX_LAST
        window_size: 30 # number of rows to predict off of at a time
        output_window:
          start_date: 2021-05-01 # this should be after the date your data ends on if you want to really project
          end_date: 2021-05-30

    indu:
      data:
        lag: 30
        bloomberg:
          S5INDU Index:
            output_basename: NULL
            cols:
              - PX_LAST
              - PE_RATIO
              - PX_TO_BOOK_RATIO
              - PX_TO_SALES_RATIO
              - FREE_CASH_FLOW_YIELD
              - EST_LTG_EPS_AGGTE
              - TOT_DEBT_TO_TOT_ASSET
              - EARN_YLD
              - PX_VOLUME
              - CUR_MKT_CAP
            col_map: []

          EHGDUS Index:
            cols:
              - PX_LAST
            col_map: []

          USGG2YR Index:
            cols:
              - PX_LAST
            col_map: []

        operations: []

      models:
        - name: LinearRegression
          type: linear_regression
          predictors:
              - source: bloomberg
                ticker: S5INDU Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5INDU Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5INDU Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5INDU Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5INDU Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5INDU Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5INDU Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5INDU Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
          hyperparams:
            fit_intercept: True
            normalize: True
            n_jobs: -1
            pc: 5
        - name: RandomForest
          type: random_forest
          predictors:
              - source: bloomberg
                ticker: S5INDU Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5INDU Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5INDU Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5INDU Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5INDU Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5INDU Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5INDU Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5INDU Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
          hyperparams:
            n_estimators: 500
            criterion: mse
            max_depth: 5
            min_samples_split: 5
            random_state: 42
            bootstrap: True
        - name: ArimaRegression
          type: arima_regression
          hyperparams:
            order: [5, 1, 0]
          fitparams:
            cov_type: robust

      predict:
        data:
          same_as_train: True
          bloomberg: {} # optional
          additional: {}
        target:
          source: bloomberg
          ticker: S5INDU Index
          col_name: PX_LAST
        window_size: 30 # number of rows to predict off of at a time
        output_window:
          start_date: 2021-05-01 # this should be after the date your data ends on if you want to really project
          end_date: 2021-05-30

    util:
      data:
        lag: 30
        bloomberg:
          S5UTIL Index:
            output_basename: NULL
            cols:
              - PX_LAST
              - PE_RATIO
              - PX_TO_BOOK_RATIO
              - PX_TO_SALES_RATIO
              - FREE_CASH_FLOW_YIELD
              - EST_LTG_EPS_AGGTE
              - TOT_DEBT_TO_TOT_ASSET
              - EARN_YLD
              - PX_VOLUME
              - CUR_MKT_CAP
            col_map: []

          EHGDUS Index:
            cols:
              - PX_LAST
            col_map: []

          USGG2YR Index:
            cols:
              - PX_LAST
            col_map: []

        operations: []

      models:
        - name: LinearRegression
          type: linear_regression
          predictors:
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            fit_intercept: True
            normalize: True
            n_jobs: -1
            pc: 5
        - name: RandomForest
          type: random_forest
          predictors:
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5UTIL Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            n_estimators: 500
            criterion: mse
            max_depth: 5
            min_samples_split: 5
            random_state: 42
            bootstrap: True
        - name: ArimaRegression
          type: arima_regression
          hyperparams:
            order: [5, 1, 0]
          fitparams:
            cov_type: robust

      predict:
        data:
          same_as_train: True
          bloomberg: {} # optional
          additional: {}
        target:
          source: bloomberg
          ticker: S5UTIL Index
          col_name: PX_LAST
        window_size: 30 # number of rows to predict off of at a time
        output_window:
          start_date: 2021-05-01 # this should be after the date your data ends on if you want to really project
          end_date: 2021-05-30

    tels:
      data:
        lag: 30
        bloomberg:
          S5TELS Index:
            output_basename: NULL
            cols:
              - PX_LAST
              - PE_RATIO
              - PX_TO_BOOK_RATIO
              - PX_TO_SALES_RATIO
              - FREE_CASH_FLOW_YIELD
              - EST_LTG_EPS_AGGTE
              - TOT_DEBT_TO_TOT_ASSET
              - EARN_YLD
              - PX_VOLUME
              - CUR_MKT_CAP
            col_map: []

          EHGDUS Index:
            cols:
              - PX_LAST
            col_map: []

          USGG2YR Index:
            cols:
              - PX_LAST
            col_map: []

        operations: []

      models:
        - name: LinearRegression
          type: linear_regression
          predictors:
              - source: bloomberg
                ticker: S5TELS Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5TELS Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5TELS Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5TELS Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5TELS Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5TELS Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5TELS Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5TELS Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            fit_intercept: True
            normalize: True
            n_jobs: -1
            pc: 5
        - name: RandomForest
          type: random_forest
          predictors:
              - source: bloomberg
                ticker: S5TELS Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5TELS Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5TELS Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5TELS Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5TELS Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5TELS Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5TELS Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5TELS Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            n_estimators: 500
            criterion: mse
            max_depth: 5
            min_samples_split: 5
            random_state: 42
            bootstrap: True
        - name: ArimaRegression
          type: arima_regression
          hyperparams:
            order: [5, 1, 0]
          fitparams:
            cov_type: robust

      predict:
        data:
          same_as_train: True
          bloomberg: {} # optional
          additional: {}
        target:
          source: bloomberg
          ticker: S5TELS Index
          col_name: PX_LAST
        window_size: 30 # number of rows to predict off of at a time
        output_window:
          start_date: 2021-05-01 # this should be after the date your data ends on if you want to really project
          end_date: 2021-05-30

    matr:
      data:
        lag: 30
        bloomberg:
          S5MATR Index:
            output_basename: NULL
            cols:
              - PX_LAST
              - PE_RATIO
              - PX_TO_BOOK_RATIO
              - PX_TO_SALES_RATIO
              - FREE_CASH_FLOW_YIELD
              - EST_LTG_EPS_AGGTE
              - TOT_DEBT_TO_TOT_ASSET
              - EARN_YLD
              - PX_VOLUME
              - CUR_MKT_CAP
            col_map: []

          EHGDUS Index:
            cols:
              - PX_LAST
            col_map: []

          USGG2YR Index:
            cols:
              - PX_LAST
            col_map: []

        operations: []
              
      models:
        - name: LinearRegression
          type: linear_regression
          predictors:
              - source: bloomberg
                ticker: S5MATR Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5MATR Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5MATR Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5MATR Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5MATR Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5MATR Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5MATR Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5MATR Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            fit_intercept: True
            normalize: True
            n_jobs: -1
            pc: 5
        - name: RandomForest
          type: random_forest
          predictors:
              - source: bloomberg
                ticker: S5MATR Index
                col_name: pe_ratio
              - source: bloomberg
                ticker: S5MATR Index
                col_name: px_to_book_ratio
              - source: bloomberg
                ticker: S5MATR Index
                col_name: px_to_sales_ratio
              - source: bloomberg
                ticker: S5MATR Index
                col_name: free_cash_flow_yield
              - source: bloomberg
                ticker: S5MATR Index
                col_name: est_ltg_eps_aggte
              - source: bloomberg
                ticker: S5MATR Index
                col_name: tot_debt_to_tot_asset
              - source: bloomberg
                ticker: S5MATR Index
                col_name: earn_yld
              - source: bloomberg
                ticker: S5MATR Index
                col_name: px_volume
              - source: bloomberg
                ticker: EHGDUS Index
                col_name: px_last
              - source: bloomberg
                ticker: USGG2YR Index
                col_name: px_last
          hyperparams:
            n_estimators: 500
            criterion: mse
            max_depth: 5
            min_samples_split: 5
            random_state: 42
            bootstrap: True
        - name: ArimaRegression
          type: arima_regression
          hyperparams:
            order: [5, 1, 0]
          fitparams:
            cov_type: robust

      predict:
        data:
          same_as_train: True
          bloomberg: {} # optional
          additional: {}
        target:
          source: bloomberg
          ticker: S5MATR Index
          col_name: PX_LAST
        window_size: 30 # number of rows to predict off of at a time
        output_window:
          start_date: 2021-05-01 # this should be after the date your data ends on if you want to really project
          end_date: 2021-05-30
  optimize:
    black_litterman:
      benchmark:
        data:
          bloomberg:
            SPX Index:
              output_basename: NULL # filepath basename (with extension)
              cols:
                - PX_LAST
              col_map: []
      predictions:
        - name: "cons outperform health 5%"
          percentage: 0.05
          weights:
            tech: 0
            cons: 1
            hlth: -1
        - name: "tech outperforms by 10%"
          percentage: 0.10
          weights:
            tech: 1
            cons: 0
            hlth: 0
      hyperparams:
        tau_override: [] # default estimation is 1 / num_observations
        lower_weight_bound: 0.1
        upper_weight_bound: 0.25
        penalty_constant: -0.1 # loss = varince + -0.1 * (actual mean returns - target returns)
      market_cap_weights:
        tech: 0.274
        hlth: 0.141
        cond: 0.116
        tels: 0.112
        fin: 0.099
        indu: 0.084
        cons: 0.07
        util: 0.032
        matr: 0.027
        eng: 0.02
    # hrp:
    #   inputs:
    #     - tech
    #     - hlth
    #     - indu
    #     - matr
    #     - util
    #   hyperparams: []
    # order:
    #   # [project names in order]
    #   - tech
    #   - cons
    #   - hlth
    #   # if we think that cons will outperform hlth by 5 %
    #   # if we also think tech will underperform by 10%
    # P: [[0, 1, -1], [-1, 0, 0]] #[tech weight, cons weight, hlth weight]
    # Q: [0.05, 0.1] # precentage per prediction

    # # now we need to ascertain the views of the investor and just input them
    # # for example, I think that google will outperform bank of america by 5%
    # # and I think that apple will outperform microsoft by 2% because windows is difficult
    # # P: [[0,0,0,1,-1,0,0], [1,-1,0,0,0,0,0]]
    # # Q: [0.05, 0.02]
